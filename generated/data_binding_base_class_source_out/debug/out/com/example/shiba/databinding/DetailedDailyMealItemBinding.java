// Generated by view binder compiler. Do not edit!
package com.example.shiba.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shiba.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailedDailyMealItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView detailedDescription;

  @NonNull
  public final RoundedImageView detailedImg;

  @NonNull
  public final TextView detailedName;

  @NonNull
  public final TextView detailedPrice;

  @NonNull
  public final TextView detailedRating;

  @NonNull
  public final TextView detailedTiming;

  @NonNull
  public final ImageView imageView6;

  private DetailedDailyMealItemBinding(@NonNull CardView rootView,
      @NonNull TextView detailedDescription, @NonNull RoundedImageView detailedImg,
      @NonNull TextView detailedName, @NonNull TextView detailedPrice,
      @NonNull TextView detailedRating, @NonNull TextView detailedTiming,
      @NonNull ImageView imageView6) {
    this.rootView = rootView;
    this.detailedDescription = detailedDescription;
    this.detailedImg = detailedImg;
    this.detailedName = detailedName;
    this.detailedPrice = detailedPrice;
    this.detailedRating = detailedRating;
    this.detailedTiming = detailedTiming;
    this.imageView6 = imageView6;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailedDailyMealItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailedDailyMealItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detailed_daily_meal_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailedDailyMealItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.detailed_description;
      TextView detailedDescription = ViewBindings.findChildViewById(rootView, id);
      if (detailedDescription == null) {
        break missingId;
      }

      id = R.id.detailed_img;
      RoundedImageView detailedImg = ViewBindings.findChildViewById(rootView, id);
      if (detailedImg == null) {
        break missingId;
      }

      id = R.id.detailed_name;
      TextView detailedName = ViewBindings.findChildViewById(rootView, id);
      if (detailedName == null) {
        break missingId;
      }

      id = R.id.detailed_price;
      TextView detailedPrice = ViewBindings.findChildViewById(rootView, id);
      if (detailedPrice == null) {
        break missingId;
      }

      id = R.id.detailed_rating;
      TextView detailedRating = ViewBindings.findChildViewById(rootView, id);
      if (detailedRating == null) {
        break missingId;
      }

      id = R.id.detailed_timing;
      TextView detailedTiming = ViewBindings.findChildViewById(rootView, id);
      if (detailedTiming == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      return new DetailedDailyMealItemBinding((CardView) rootView, detailedDescription, detailedImg,
          detailedName, detailedPrice, detailedRating, detailedTiming, imageView6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
